# -*- coding: utf-8 -*-
"""Benjamin Nikholas_Tugas 5_Modul 1_7 Mei 2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ByUv-cNDpa4-TKmFzvhi1GyNUutg_PVC

> Benjamin Nikholas

> Data Science / JCSDOL-014

> Modul 1 - Tugas 5

> 7 Mei 2024
---
---

#1 Auto Translator Hari

Silakan buat 1 Dictionary untuk Inisiasi

Hari = {"senin" : "monday",
"selasa" : "tuesday",
"rabu" : "wednesday",
dst....
}

> Input :
* Masukkan Nama Hari :

> Output :
* Jika yg dimasukkan hari dalam bahasa indonesia:

> `nama hari – in English is -hari dalam bahasa inggris-`

*  Jika yg dimasukkan dari dalam bahasa inggris:

> `-hari dalam bahasa inggris- in Bahasa is -hari bahasa indo-`
"""

hari = {
    'senin': 'monday',
    'selasa': 'tuesday',
    'rabu': 'wednesday',
    'kamis': 'thursday',
    'jumat': 'friday',
    'sabtu': 'saturday',
    'minggu': 'sunday'
}

while True:
    day = input('Masukkan Nama Hari: ').lower()

    if day in hari:
        print(f'{day.capitalize()} in English is {hari[day].capitalize()}')
        break
    elif day in hari.values():
        hari_indo = [key for key, value in hari.items() if value == day][0]
        print(f'{day.capitalize()} in Bahasa is {hari_indo.capitalize()}')
        break
    else:
        print('Hari tidak valid.')

"""#2

Kita memiliki daftar Hari

> Input :
* Masukkan nama hari .......YYYY
* Masukkan Jumlah......x

> Output :
* Hari ini hari YYYY, x hari lagi adalah hari ....

"""

days = ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu', 'Minggu']

day_input = input('Masukkan nama hari: ')
day_nums = int(input('Masukkan Jumlah hari: '))

day_input = day_input.capitalize()
day_index = days.index(day_input)

future_day_index = (day_index + day_nums) % 7

print(f'Hari ini hari {day_input}, {day_nums} hari lagi adalah hari {days[future_day_index]}')

"""#3
> input : Masukkan kalimat :

> Output : (Reverse per kata)
"""

sentence = input('Masukkan kalimat: ')
words = sentence.split()
reverse_sentence = ''

for word in words:
    reverse_sentence += f'{word[::-1]}'

print(f'Kalimat setelah dibalik per kata: {reverse_sentence}')

"""#4

 Buat Suatu Program yg menghapus duplikat dalam list dengan tetap mempertahankan
urutannya.

> Contoh :

List = [2, 2, 1, 1, 4, 7, 7, 9, 9, 9]
> Output :

[2, 1, 4, 7, 9]
"""

def del_duplicates(lst):
    unique = []
    for i in lst:
      if i not in unique:
        unique.append(i)

    return unique

# Contoh penggunaan
list_awal = [2, 2, 1, 1, 4, 7, 7, 9, 9, 9]
hasil = del_duplicates(list_awal)
print(hasil)

"""#5

Buat Program python untuk menghitung frekuensi kemunculan suatu kata dalam Lirik lagu

(Kalimat)

> Contoh :

Lirik lagu : “
I'm fired up and tired of the way that things have been
The way that things have been “

> Output :

I’m : 1

Fired : 1

Up : 1

And : 1

Tired : 1
"""

def hitung_frekuensi_kata(lirik):
    # Membagi lirik menjadi kata-kata
    kata_kata = lirik.split()

    # Inisialisasi kamus untuk menyimpan frekuensi kemunculan kata
    frekuensi_kata = {}

    # Menghitung frekuensi kemunculan setiap kata
    for kata in kata_kata:
        # Menghapus tanda baca jika ada
        kata = kata.strip(".,?!")

        # Mengubah kata menjadi huruf kecil agar tidak sensitif terhadap huruf besar/kecil
        kata = kata.lower()

        # Menambahkan kata ke kamus dan menghitung frekuensinya
        if kata in frekuensi_kata:
            frekuensi_kata[kata] += 1
        else:
            frekuensi_kata[kata] = 1

    return frekuensi_kata

# Contoh penggunaan
lirik_lagu = """
I'm fired up and tired of the way that things have been
The way that things have been
"""
hasil = hitung_frekuensi_kata(lirik_lagu)
for kata, frekuensi in hasil.items():
    print(f"{kata}: {frekuensi}")

"""#6

Buat program untuk mengetahui Apakah suatu kata 1 dan kata 2 merupakan anagram
> Contoh :
* Input Kata 1 : Listen
* Input Kata 2 : Silent

> Output : (Kata 1) merupakan anagram dari (Kata 2)
"""

def cek_anagram(w1, w2):
    w1 = w1.replace(" ", "").lower()
    w2 = w2.replace(" ", "").lower()

    if len(w1) != len(w2):
        return False

    freq_w1 = {}
    freq_w2 = {}

    for char in w1:
        if char in freq_w1:
            freq_w1[char] += 1
        else:
            freq_w1[char] = 1

    for char in w2:
        if char in freq_w2:
            freq_w2[char] += 1
        else:
            freq_w2[char] = 1

    if freq_w1 == freq_w2:
        return True
    else:
        return False

# Contoh penggunaan
w1 = input("Input Kata 1: ")
w2 = input("Input Kata 2: ")

if check_anagram(w1, w2):
    print(f"\"{w1}\" merupakan anagram dari \"{w2}\"")
else:
    print(f"\"{w1}\" bukan merupakan anagram dari \"{w2}\"")